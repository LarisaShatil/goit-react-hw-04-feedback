{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","item","Section","props","title","children","section","Notification","message","FeedbackOptions","handleFeedback","btn","type","onClick","name","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,IAAM,+B,mBCAxBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,iC,gBCArED,EAAOC,QAAU,CAAC,QAAU,gC,uJCuBbC,MArBf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,mBAC7C,OACE,mCACI,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,mBAA8BR,KAC9B,qBAAIK,UAAWC,IAAEE,KAAjB,sBAAiCP,KACjC,qBAAII,UAAWC,IAAEE,KAAjB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAEE,KAAjB,oBAAgCL,KAChC,qBAAIE,UAAWC,IAAEE,KAAjB,iCAA4CJ,EAA5C,c,gBCWGK,MAlBf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,mCACE,0BAASP,UAAWC,IAAEO,QAAtB,UACE,oBAAIR,UAAU,gBAAd,SAAgCM,IAC/BC,Q,gBCAME,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGV,UAAWC,IAAES,QAAhB,SAA2BA,K,gBCarBC,MAdf,YAA4C,IAAlBC,EAAiB,EAAjBA,eACxB,OACE,qCACE,wBAAQZ,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,OAAtE,+BACA,wBAAQhB,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,UAAtE,kCACA,wBAAQhB,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,MAAtE,kCCqDSC,G,MArDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAeMC,EAAqB,WACzB,OAAQ3B,EAAOC,EAAUC,GAQ3B,OACG,sBAAKG,UAAU,MAAf,UACI,2CACA,cAAC,EAAD,CAASM,MAAM,8BAAf,SACA,cAAC,EAAD,CACCM,eA3BiB,SAACW,GACtB,IAAMP,EAAOO,EAAEC,OAAOR,KACT,SAATA,GACFG,GAAQ,SAAAM,GAAQ,OAAIA,EAAU,KAEnB,YAATT,GACFI,GAAW,SAAAM,GAAW,OAAIA,EAAa,KAE5B,QAATV,GACFK,GAAO,SAAAM,GAAO,OAAIA,EAAS,UAqB3B,cAAC,EAAD,CAASrB,MAAM,aAAf,SAEGgB,IACY,cAAC,EAAD,CACX3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBApBD6B,KAAKC,MAAc,IAAPlC,EAAc2B,OAuBvB,cAAC,EAAD,CAAcZ,QAAQ,8BCjDpCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.21305b6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3ICOA\",\"item\":\"Statistics_item__1BpSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__zIYe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1zHzk\",\"section_title\":\"Section_section_title__2dvAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3fSwB\"};","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}){\r\n    return (\r\n      <>\r\n          <ul className={s.list}>\r\n            <li className={s.item}>Good: {good}</li>\r\n            <li className={s.item}>Neutral: {neutral}</li>\r\n            <li className={s.item}>Bad: {bad}</li>\r\n            <li className={s.item}>Total: { total}</li>\r\n            <li className={s.item}>Positive feedbacks: {positivePercentage} %</li>\r\n          </ul>\r\n      </>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <section className={s.section}>\r\n        <h2 className=\"section_title\">{ title}</h2>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.message}>{ message}</p>\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({handleFeedback}) {\r\n  return (\r\n    <>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='good'>üòç Good</button>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='neutral'>üòê Neutral</button>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='bad'>üòï Bad</button>\r\n    </>\r\n  )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import { useState } from 'react';\r\n\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport Notification from './components/Notification/Notification';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  \r\n    const handleFeedback = (e) => {\r\n      const name = e.target.name;\r\n      if (name === 'good') { \r\n        setGood(prevGood => prevGood +1)\r\n      }\r\n      if (name === 'neutral') { \r\n        setNeutral(prevNeutral => prevNeutral +1)\r\n      }\r\n      if (name === 'bad') { \r\n        setBad(prevBad => prevBad +1)\r\n      }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return (good + neutral + bad);\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n\r\n  }\r\n\r\n  return (\r\n     <div className=\"App\">\r\n         <h1>Feedbacks</h1>\r\n         <Section title=\"Please leave your feedback:\">\r\n         <FeedbackOptions\r\n          handleFeedback={handleFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {/* render on condition */}\r\n          {countTotalFeedback() ?\r\n            (          <Statistics \r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n            />) :\r\n            (\r\n              <Notification message=\"No feedbacks given\"/>\r\n            )}\r\n        </Section>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}